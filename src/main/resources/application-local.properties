#\uC560\uD50C\uB9AC\uCF00\uC774\uC158 \uD3EC\uD2B8 \uC124\uC815
server.port = 8080

#Live Reload \uAE30\uB2A5 \uD65C\uC131\uD654
spring.devtools.livereload.enabled=true

#\uC2A4\uD504\uB9C1 \uBC30\uD3EC\uC6A9 \uACBD\uB85C\uC124\uC815
spring.thymeleaf.prefix=classpath:/templates/


#MySQL \uC5F0\uACB0 \uC124\uC815
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/shop2?serverTimeZone=UTC
#spring.datasource.username=root
#spring.datasource.password=1234

# \uD559\uAD50DB
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://114.71.137.175:56346/space?serverTimeZone=UTC
spring.datasource.username=space
spring.datasource.password=space

#local
#spring.datasource.url=jdbc:mysql://localhost:3306/space?serverTimeZone=UTC
#spring.datasource.username=root
#spring.datasource.password=whd369369!!




#\uC2E4\uD589\uB418\uB294 \uCFFC\uB9AC \uCF58\uC194 \uCD9C\uB825
spring.jpa.properties.hibernate.show_sql=true

#\uCF58\uC194\uCC3D\uC5D0 \uCD9C\uB825\uB418\uB294 \uCFFC\uB9AC\uB97C \uAC00\uB3C5\uC131\uC774 \uC88B\uAC8C \uD3EC\uB9F7\uD305
spring.jpa.properties.hibernate.format_sql=true

#\uCFFC\uB9AC\uC5D0 \uBB3C\uC74C\uD45C\uB85C \uCD9C\uB825\uB418\uB294 \uBC14\uC778\uB4DC \uD30C\uB77C\uBBF8\uD130 \uCD9C\uB825
logging.lever.org.hibernate.type.descriptor.sql=true

spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.ddl-auto=create

## jpa \uAD6C\uB3D9\uC2DC data.sql \uC2E4\uD589 \uAD00\uB828 \uC124\uC815 # data.sql \uAD6C\uB3D9\uC2DC resources \uD3F4\uB354 \uBC11\uC5D0 \uC788\uC5B4\uC57C \uC801\uC6A9 \uAC00\uB2A5 # resource/db \uD3F4\uB354\uB294 data.sql \uBCF4\uAD00\uC6A9
#spring.jpa.defer-datasource-initialization=true
#spring.sql.init.mode = always


#spring.jpa.database-platform=org.hibernate.dialect.MySQL8dialect

# \uC2DC\uD050\uB9AC\uD2F0 \uCEF4\uD30C\uC77C \uC5D0\uB7EC \uC218\uC815
spring.main.allow-bean-definition-overriding=true
spring.main.allow-circular-references=true

# Oauth2 \uC124\uC815
# \uAD6C\uAE00
spring.security.oauth2.client.registration.google.client-id=714469198468-gaqos5d3gp3iu3g9tnki9etr33500814.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=profile,email
#spring.profiles.include=google

# \uD398\uC774\uC2A4\uBD81
spring.security.oauth2.client.registration.facebook.client-id=1127231501264726
spring.security.oauth2.client.registration.facebook.client-secret=2e6b7b73e436b1a1bde4c754d7b12404
spring.security.oauth2.client.registration.facebook.scope=public_profile,email
#spring.profiles.include=google,facebook


# \uCE74\uCE74\uC624
spring.security.oauth2.client.registration.kakao.client-id=f247db93c5c8e15a4cbdcdd31da6d4a6
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:8080/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.scope=profile_nickname, profile_image, account_email
spring.security.oauth2.client.registration.kakao.client-name=kakao
spring.security.oauth2.client.registration.kakao.client-authentication-method=POST
spring.security.oauth2.client.provider.kakao.authorization-uri=	https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

# \uB124\uC774\uBC84
spring.security.oauth2.client.registration.naver.client-id=nbXk9EHAEOEWBF6XlqtM
spring.security.oauth2.client.registration.naver.client-secret=4sxhrm5Hzo
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8080/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.client-name=Naver
spring.security.oauth2.client.provider.naver.authorization-uri=	https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response
#\uD68C\uC6D0\uC815\uBCF4\uB97C json\uC73C\uB85C \uBC1B\uB294\uB370 response\uB77C\uB294 \uD0A4 \uAC12\uC73C\uB85C \uB124\uC774\uBC84\uAC00 \uB9AC\uD134\uD574\uC90C



# \uD30C\uC77C \uD55C \uAC1C\uB2F9 \uCD5C\uB300 \uC0AC\uC774\uC988
spring.servlet.multipart.max-file-size=20MB

# \uC694\uCCAD\uB2F9 \uCD5C\uB300 \uD30C\uC77C \uD06C\uAE30
spring.servlet.multipart.max-request-size=100MB

# \uC0C1\uD488 \uC774\uBBF8\uC9C0 \uC5C5\uB85C\uB4DC \uACBD\uB85C
#itemImgLocation=C:/shop/item

# \uD504\uB85C\uD544 \uC774\uBBF8\uC9C0 \uC218\uC815
profileImgLocation=C:/space/profileImage/
profileuploadPath=file:///C:/space/profileImage/

# \uD0A4\uC704\uB9C8\uCF13 \uAE00\uC4F0\uAE30
contentImgLocation=/Users/spaceImages/
contentuploadPath=file:///Users/spaceImages/
#contentImgLocation=C:/space/CK_image/
#contentuploadPath=file:///C:/space/CK_image/

# \uB9AC\uC18C\uC2A4 \uC5C5\uB85C\uB4DC \uACBD\uB85C
# \uC678\uBD80 \uD3F4\uB354 \uACBD\uB85C \uB9E4\uCE6D - resource.path : \uBDF0\uC5D0\uC11C \uC120\uD0DD\uD55C \uD30C\uC77C \uC800\uC7A5 \uACBD\uB85C resource : \uD30C\uC77C \uAC80\uC0C9\uC6A9 \uC8FC\uC18C uploadPath : \uC5C6\uC5B4\uB3C4 \uB428 (\uC9C0\uC6B8\uAC70\uBA74 MVC\uC5D0\uC11C\uB3C4 \uC9C0\uC6CC)
resource.path=file:///C:/market/Title_image/
resource=C:/market/Title_image/
uploadPath=C:/market/Title_image/


## \uBC30\uD3EC\uC6A9 \uD504\uB85C\uD37C\uD2F0\uC2A4
#resource.path=file:///home/kjh/Title_image/
#resource=/home/kjh/Title_image/
#uploadPath=/home/kjh/Title_image/
#
#marketImgLocation=/home/kjh/CK_image/
#marketuploadPath=file:///home/kjh/CK_image/


# \uAE30\uBCF8 batch size \uC124\uC815
spring.jpa.properties.hibernate.default_batch_fetch_size=1000

